import{m as i,c as o,h as r,v as n,g as d,aq as u}from"./index.f7a7949b.js";import{u as b,a as H}from"./use-dark.c9afc95e.js";import{r as m,l as A,m as p}from"./rtl.1af79ae3.js";import{r as g}from"./apOptionQuery.51251c70.js";var O=i({name:"QList",props:{...b,bordered:Boolean,dense:Boolean,separator:Boolean,padding:Boolean,tag:{type:String,default:"div"}},setup(a,{slots:t}){const s=d(),e=H(a,s.proxy.$q),l=o(()=>"q-list"+(a.bordered===!0?" q-list--bordered":"")+(a.dense===!0?" q-list--dense":"")+(a.separator===!0?" q-list--separator":"")+(e.value===!0?" q-list--dark":"")+(a.padding===!0?" q-list--padding":""));return()=>r(a.tag,{class:l.value},n(t.default))}});const I=u("AllHabitStore",{state:()=>({allHabits:[],numOfAllHabits:0,isHabitLoading:!1}),actions:{async getAllHabits(){this.isHabitLoading=!0,this.allHabits=await m(),this.numOfAllHabits=this.allHabits.length;for(let a=0;a<this.allHabits.length;a++){const t=this.allHabits[a];t.optionDetails=await A(t.HABIT_ID),t.apDetails=await p(t.HABIT_ID);for(let s=0;s<t.apDetails.length;s++){const e=t.apDetails[s];e.HAS_OPTION?e.AP_OPTIONS=await g(e.AP_ID):e.AP_OPTIONS=[]}}this.isHabitLoading=!1,console.log("AllHabits:",this.allHabits)}}});export{O as Q,I as u};
